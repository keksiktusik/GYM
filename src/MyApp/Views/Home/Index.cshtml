@model MyApp.Models.Person
@{
    ViewData["Title"] = "Panel zdrowia i zajęć";
}

<header>
    <div class="container text-center">
        <h1>System rezerwacji fitness</h1>
        <p class="mb-0">Panel zdrowia – Kalkulator BMI i kalendarz zajęć</p>
    </div>
</header>

<div class="container mt-5">
    <div class="row g-4 align-items-center">

        <!-- Lewa kolumna – formularz BMI -->
        <div class="col-md-6">
            <div class="card p-4">
                <h3 class="mb-3 text-center text-primary">Kalkulator BMI</h3>
                <form asp-action="Index" method="post">
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        <label asp-for="HeightCm" class="form-label fw-semibold"></label>
                        <input asp-for="HeightCm" class="form-control" type="number" step="0.1" min="1" />
                        <span asp-validation-for="HeightCm" class="text-danger small"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="WeightKg" class="form-label fw-semibold"></label>
                        <input asp-for="WeightKg" class="form-control" type="number" step="0.1" min="1" />
                        <span asp-validation-for="WeightKg" class="text-danger small"></span>
                    </div>

                    <div class="d-grid">
                        <button class="btn btn-primary btn-lg">Oblicz BMI</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Prawa kolumna – ilustracja -->
        <div class="col-md-6 text-center">
            <img src="https://cdn-icons-png.flaticon.com/512/2965/2965879.png"
                 alt="fitness" class="img-fluid" style="max-height: 300px;">
        </div>
    </div>

    <!-- Sekcja kalendarza -->
    <div class="card p-4 mt-5">
        <h3 class="text-center mb-3 text-primary">Kalendarz</h3>

        <div class="d-flex justify-content-between align-items-center mb-3">
            <button id="prev" class="btn btn-outline-secondary btn-sm">← Poprzedni</button>
            <h4 id="monthYear" class="m-0"></h4>
            <button id="next" class="btn btn-outline-secondary btn-sm">Następny →</button>
        </div>

        <table class="table table-bordered text-center align-middle" id="calendar">
            <thead class="table-light">
                <tr>
                    <th>Pn</th>
                    <th>Wt</th>
                    <th>Śr</th>
                    <th>Cz</th>
                    <th>Pt</th>
                    <th>Sob</th>
                    <th>Nd</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<footer>
    <p>© 2025 System rezerwacji fitness | Projekt ASP.NET MVC Core</p>
</footer>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // --- PROSTY KALENDARZ ---
        const monthYear = document.getElementById('monthYear');
        const calendarBody = document.querySelector('#calendar tbody');
        const prevBtn = document.getElementById('prev');
        const nextBtn = document.getElementById('next');

        let currentDate = new Date();

        function renderCalendar(date) {
            const year = date.getFullYear();
            const month = date.getMonth();
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const firstWeekday = (firstDay.getDay() + 6) % 7;
            const daysInMonth = lastDay.getDate();

            const months = [
                "Styczeń", "Luty", "Marzec", "Kwiecień", "Maj", "Czerwiec",
                "Lipiec", "Sierpień", "Wrzesień", "Październik", "Listopad", "Grudzień"
            ];
            monthYear.textContent = `${months[month]} ${year}`;
            calendarBody.innerHTML = "";

            let row = document.createElement('tr');
            for (let i = 0; i < firstWeekday; i++) {
                row.appendChild(document.createElement('td'));
            }

            for (let day = 1; day <= daysInMonth; day++) {
                const cell = document.createElement('td');
                cell.textContent = day;
                const today = new Date();
                if (day === today.getDate() && month === today.getMonth() && year === today.getFullYear()) {
                    cell.classList.add('table-primary', 'fw-bold');
                }
                row.appendChild(cell);
                if ((firstWeekday + day) % 7 === 0) {
                    calendarBody.appendChild(row);
                    row = document.createElement('tr');
                }
            }
            calendarBody.appendChild(row);
        }

        prevBtn.addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() - 1);
            renderCalendar(currentDate);
        });

        nextBtn.addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() + 1);
            renderCalendar(currentDate);
        });

        renderCalendar(currentDate);
    </script>
}
